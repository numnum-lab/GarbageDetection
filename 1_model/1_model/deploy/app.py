import cv2
import streamlit as st
from ultralytics import YOLO
from PIL import Image
import numpy as np
# ‡∏•‡∏ö streamlit_webrtc ‡πÅ‡∏•‡∏∞ WebRTC-related imports ‡∏≠‡∏≠‡∏Å
# from streamlit_webrtc import webrtc_streamer, VideoProcessorBase, RTCConfiguration
# import av
import torch
# ‡∏•‡∏ö functools.partial ‡∏≠‡∏≠‡∏Å (‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö webcam)
# from functools import partial
from huggingface_hub import hf_hub_download

# ------------------------------------------------
# Initial Session State
# ------------------------------------------------
if "is_webcam_active" not in st.session_state:
    st.session_state.is_webcam_active = False

if "is_detecting" not in st.session_state:
    st.session_state.is_detecting = False

if "detected_classes" not in st.session_state:
    st.session_state.detected_classes = []

if "confidence_threshold" not in st.session_state:
    st.session_state.confidence_threshold = 0.2

# ------------------------------------------------
# Streamlit Page Configuration
# ------------------------------------------------
st.set_page_config(
    page_icon="üîç",
    layout="wide",
    initial_sidebar_state="expanded",
    page_title="Object Detection",
)

# ------------------------------------------------
# YOLO Classes & Disposal Messages
# ------------------------------------------------
yolo_classes = [
    "battery", "biological", "cardboard", "clothes", "glass",
    "metal", "paper", "plastic", "shoes", "trash"
]

disposal_messages = {
    "battery": "‚ö° **Battery detected!** Dispose in the **HAZARDOUS** bin.",
    "biological": "üçÉ **Biological waste detected!** Dispose in the **ORGANIC** bin.",
    "cardboard": "üì¶ **Cardboard detected!** Flatten and dispose in the **RECYCLING** bin.",
    "clothes": "üëï **Clothes detected!** Consider donating, or dispose in the **GENERAL** bin.",
    "glass": "üç∂ **Glass detected!** Dispose in the **RECYCLING** bin.",
    "metal": "üî© **Metal detected!** Dispose in the **RECYCLING** bin.",
    "paper": "üìÑ **Paper detected!** Dispose in the **RECYCLING** bin.",
    "plastic": "‚ôªÔ∏è **Plastic detected!** Dispose in the **RECYCLING** bin.",
    "shoes": "üëü **Shoes detected!** Consider donating, or dispose in the **GENERAL** bin.",
    "trash": "üóëÔ∏è **General trash detected!** Dispose in the **GENERAL** bin.",
}

# ------------------------------------------------
# Load YOLO Model
# ------------------------------------------------
@st.cache_resource
def load_yolo_model():
    try:
        repo_id = "Numgfsdf/garbage-detection-model"  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô repo ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
        filename = "my_model.pt"                      # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á

        # ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Hugging Face
        model_path = hf_hub_download(repo_id=repo_id, filename=filename)

        # ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• YOLO
        model = YOLO(model_path)
        st.success(f"‡πÇ‡∏´‡∏•‡∏î YOLO Model ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å {model_path}!")
        return model
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î YOLO model: {e}")
        return None

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
if "yolo_model" not in st.session_state:
    st.session_state.yolo_model = load_yolo_model()

# ------------------------------------------------
# Sidebar
# ------------------------------------------------
    st.set_page_config(layout="wide")
#Config
    cfg = load_yolo_model()
    PICTURE_PROMPT = cfg['INFO']['PICTURE_PROMPT']
    WEBCAM_PROMPT = cfg['INFO']['WEBCAM_PROMPT']



    st.sidebar.title("Settings")



#Create a menu bar
    menu = ["Picture","Webcam"]
    choice = st.sidebar.selectbox("Input type",menu)
    #Put slide to adjust tolerance
    TOLERANCE = st.sidebar.slider("Tolerance",0.0,1.0,0.5,0.01)
    st.sidebar.info("Tolerance is the threshold for face recognition. The lower the tolerance, the more strict the face recognition. The higher the tolerance, the more loose the face recognition.")

#Infomation section 
    st.sidebar.title("trast")

    # Disposal Guide
    st.markdown("---")
    st.subheader("üìã Disposal Guide")
    with st.expander("View all disposal instructions"):
        st.markdown("### üü• **Hazardous Bin**")
        st.error("‚ö° **Battery:** Dispose in the **HAZARDOUS** bin.")
        st.markdown("### üü¢ **Organic Bin**")
        st.success("üçÉ **Biological:** Dispose in the **ORGANIC** bin.")
        st.markdown("### üü° **Recyclables**")
        st.warning("üì¶ **Cardboard:** Flatten and dispose in the **RECYCLING** bin.")
        st.warning("üç∂ **Glass:** Dispose in the **RECYCLING** bin.")
        st.warning("üî© **Metal:** Dispose in the **RECYCLING** bin.")
        st.warning("üìÑ **Paper:** Dispose in the **RECYCLING** bin.")
        st.warning("‚ôªÔ∏è **Plastic:** Dispose in the **RECYCLING** bin.")
        st.markdown("### üü¶ **Donate**")
        st.info("üëï **Clothes:** Consider **Donating** or dispose in the **GENERAL** bin.")
        st.info("üëü **Shoes:** Consider **Donating** or dispose in the **GENERAL** bin.")
        st.markdown("### ‚¨õ **General Waste**")
        st.error("üóëÔ∏è **Trash:** Dispose in the **GENERAL** bin.")

# ------------------------------------------------
# Main Content - ‡πÄ‡∏û‡∏¥‡πà‡∏° webcam functionality ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
# ------------------------------------------------
    col1, col2 = st.columns(2)
    with col1:
        st.write("""
        ### üóÇÔ∏è Garbage Detection Using YOLO
        This project helps people sort garbage more easily.

        **Features:**
        - Real-time webcam capture
        - Image analysis
        - Smart disposal recommendations
        - Multiple waste categories supported
        """)

    with col2:
        st.write("""
        ### üìñ How to Use:
        1. **Upload** an image or **activate webcam**
        2. **Adjust** confidence threshold as needed
        3. **Select** specific classes to detect (optional)
        4. **Start detection** and follow the disposal instructions

        The system will automatically provide disposal guidance for detected items!
        """)